---
title: "Assignment 2"
format: html
editor: visual
embed-resources: true
---
Name:LIYING DENG

```{r}
library(dplyr) 
library(data.table)
library(ggplot2)
```
#Part 1- Question 1 After merging the data, make sure you don’t have any duplicates by counting the number of rows. Make sure it matches.
In the case of missing values, impute data using the average amongst individuals with the same values for the “male” and “hispanic” variables. For categorical variables, take the mode. If you are interested (and feel adventurous) in the theme of Data Imputation, take a look at this paper on “Multiple Imputation” using the Amelia R package here.
```{r}
library(dplyr)
library(data.table) 
library(tidyverse)
individual_data <- data.table::fread("/Users/kristydeng/Downloads/chs_individual.csv")
regional_data <- data.table::fread("/Users/kristydeng/Downloads/chs_regional.csv")
combined_data <- merge(individual_data, regional_data, by = "townname")
nrow(combined_data)
# Check for duplicates
duplicated_rows <- combined_data[duplicated(combined_data), ]
# Remove duplicates if necessary
combined_data <- combined_data[!duplicated(combined_data), ]
# Check the number of rows before and after removing duplicates
numeric_cols <- c("agepft", "height", "weight", "bmi", "fev", "fvc", "mmef", "pm2_5_fr", "no_24hr")
categorical_cols <- c("asthma", "active_asthma", "father_asthma", "mother_asthma", 
                      "wheeze", "hayfever", "allergy", "educ_parent", "smoke", 
                      "pets", "gasstove")
mode_function <- function(x) {
  ux <- unique(x)
  ux[which.max(tabulate(match(x, ux)))]
}
combined_data <- combined_data %>%
  group_by(male, hispanic) %>%
  mutate(across(where(~ all(. %in% c(0,1,2,3,4,5,NA))), 
           ~ ifelse(is.na(.), mode_function(.), .)),
         across(where(is.numeric), ~ ifelse(is.na(.), mean(., na.rm = TRUE), .))
         )
```
#Part 1 - Question 2 Create a new categorical variable named “obesity_level” using the BMI measurement (underweight BMI<14; normal BMI 14-22; overweight BMI 22-24; obese BMI>24). To make sure the variable is rightly coded, create a summary table that contains the minimum BMI, maximum BMI, and the total number of observations per category.
```{r}
library(dplyr)
# Assuming the dataset already has a 'BMI' column
# Create a new categorical variable 'obesity_level' based on BMI values
combined_data <- combined_data %>%
  mutate(obesity_level = case_when(
    bmi < 14 ~ "underweight",
    bmi >= 14 & bmi <= 22 ~ "normal",
    bmi > 22 & bmi <= 24 ~ "overweight",
    bmi > 24 ~ "obese",
    TRUE ~ NA_character_  # Handle missing BMI values
  ))
# Create a summary table with minimum BMI, maximum BMI, and the total number of observations per category
obesity_summary <- combined_data %>%
  group_by(obesity_level) %>%
  summarise(
    min_bmi = ifelse(all(is.na(bmi)), NA, min(bmi, na.rm = TRUE)),   # Replace Inf with NA
    max_bmi = ifelse(all(is.na(bmi)), NA, max(bmi, na.rm = TRUE)),   # Replace -Inf with NA
    total_obs = n()
  )
# View the summary table
print(obesity_summary)
```
#Part 1 - Question 3 Create another categorical variable named “smoke_gas_exposure” that summarizes “Second Hand Smoke” and “Gas Stove.” The variable should have four categories in total.
```{r}
# Check the column names and replace 'second_hand_smoke' and 'gas_stove' with the actual column names
combined_data <- combined_data %>%
  mutate(smoke_gas_exposure = case_when(
    `smoke` == 0 & `gasstove` == 0 ~ "Neither",               # Replace with actual column names
    `smoke` == 1 & `gasstove` == 0 ~ "Only Second-Hand Smoke", # Replace with actual column names
    `smoke` == 0 & `gasstove` == 1 ~ "Only Gas Stove",         # Replace with actual column names
    `smoke` == 1 & `gasstove` == 1 ~ "Both",                   # Replace with actual column names
    TRUE ~ NA_character_  # Handle missing values
  ))
# View the distribution of the new variable
table(combined_data$smoke_gas_exposure)
```
#Part 1 - Question 4 Create four summary tables showing the average (or proportion, if binary) and sd of “Forced expiratory volume in 1 second (ml)” (an asthma indicator) by town, sex, obesity level, and “smoke_gas_exposure.”
```{r}
library(dplyr)
# 1. Summary table by town
summary_by_town <- combined_data %>%
  group_by(townname) %>%  # Replace 'townname' with the actual column name for town
  summarise(
    mean_fev = mean(fev, na.rm = TRUE),
    sd_fev = sd(fev, na.rm = TRUE),
  )
# 2. Summary table by sex
summary_by_sex <- combined_data %>%
  group_by(male) %>%  # Replace 'sex' with the actual column name for sex
  summarise(
    mean_fev = mean(fev, na.rm = TRUE),
    sd_fev = sd(fev, na.rm = TRUE),
    total_obs = n()
  )
# 3. Summary table by obesity level
summary_by_obesity <- combined_data %>%
  group_by(obesity_level) %>%  # Ensure the 'obesity_level' variable has been created
  summarise(
    mean_fev = mean(fev, na.rm = TRUE),
    sd_fev = sd(fev, na.rm = TRUE),
    total_obs = n()
  )
# 4. Summary table by smoke_gas_exposure
summary_by_smoke_gas_exposure <- combined_data %>%
  group_by(smoke_gas_exposure) %>%
  summarise(
    mean_fev = mean(fev, na.rm = TRUE),
    sd_fev = sd(fev, na.rm = TRUE),
    total_obs = n()
  )
summary_by_town
summary_by_sex
summary_by_obesity
summary_by_smoke_gas_exposure
```

Part 2 - Looking at the Data (EDA)
#What is the association between BMI and FEV (forced expiratory volume)?
```{r}
model <- lm(fev ~ bmi, data = combined_data)
summary(model)
ggplot(combined_data, aes(x = bmi, y = fev)) +
  geom_point() +
  geom_smooth(method = "lm", col = "Red") +
  labs(title = "Association between BMI and FEV", x = "BMI", y = "FEV")
model <- lm(fev ~ bmi, data = combined_data)
summary(model)
###Conclusion: P value less than 0.05, BMI has a significant positive association with FEV.
```
#What is the association between smoke and gas exposure and FEV?
```{r}
anova_model <- aov(fev ~ smoke_gas_exposure, data = combined_data)
summary(anova_model)
ggplot(combined_data, aes(x = smoke_gas_exposure, y = fev)) +
  geom_boxplot() +
  labs(title = "FEV by Smoke and Gas Exposure", x = "Smoke and Gas Exposure", y = "FEV") +
  theme_minimal()
###Conclusion: The ANOVA test shows that there is no statistically significant association between smoke and gas exposure and FEV (p = 0.525).
```
#What is the association between PM2.5 exposure and FEV?
```{r}
  summary_pm25_fev <- combined_data %>%
  summarise(
    mean_pm25 = mean(pm25_mass, na.rm = TRUE),
    mean_fev = mean(fev, na.rm = TRUE),
    sd_fev = sd(fev, na.rm = TRUE)
  )
pm25_fev_model <- lm(fev ~ pm25_mass, data = combined_data)
summary(pm25_fev_model)
ggplot(combined_data, aes(x = pm25_mass, y = fev)) +
  geom_point() +
  geom_smooth(method = "lm", col = "pink") +  
  labs(title = "Relationship between PM2.5 Exposure and FEV", 
       x = "PM2.5 Exposure", 
       y = "FEV") +
  theme_minimal()
###Conclusion:P value less than 0.05, there is a significant negative association between PM2.5 exposure and FEV （P=0.01096)
```

Part 3 Visualization
#Facet plot showing scatterplots with regression lines of BMI vs FEV by “townname”
```{r}
library(ggplot2)
ggplot(combined_data, aes(x = bmi, y = fev)) +  # Assuming 'BMI' and 'fev1' are the correct column names
  geom_point(alpha = 0.6) +  # Add scatter points
  geom_smooth(method = "lm", se = FALSE, color = "red") +  # Add regression lines
  facet_wrap(~ townname) +  # Facet by townname
  labs(title = "BMI vs FEV by Town", x = "bmi", y = "fev") +
  theme_minimal()
###Interpret: There is a positive association between BMI and FEV. As BMI increases, FEV also increase because many of the towns (like Alpine, Lancaster, Long Beach, Riverside, San Dimas,etc.) there is a positive slope.
```
#Stacked histograms of FEV by BMI category and FEV by smoke/gas exposure
```{r}
library(ggplot2)
combined_data <- combined_data %>%
  mutate(bmi_category = case_when(
    bmi < 14 ~ "Underweight",
    bmi >= 14 & bmi <= 22 ~ "Normal",
    bmi > 22 & bmi <= 24 ~ "Overweight",
    bmi > 24 ~ "Obese"
  ))
ggplot(combined_data, aes(x = fev, fill = bmi_category)) +
  geom_histogram(position = "stack", binwidth = 100, color = "black") +
  scale_fill_brewer(palette = "Set1") +  # Use a different color scheme
  labs(title = "fev by bmi Category", x = "fev", y = "Count", fill = "bmi Category") +
  theme_minimal()
###Interpret：The distribution follows a bell-shaped curve (normal distribution). BMI individuals peaking around 2000 ml FEV. Obese and overweight individuals tend to have slightly higher FEV values, while underweight individuals mostly have lower FEV values.
```
#Stacked histograms of FEV by smoke/gas exposure
```{r}
# Stacked histogram of FEV by smoke/gas exposure
ggplot(combined_data, aes(x = fev, fill = smoke_gas_exposure)) +
  geom_histogram(position = "stack", binwidth = 100, color = "black") +
  labs(title = "FEV by Smoke/Gas Exposure", x = "fev", y = "Count", fill = "Smoke/Gas Exposure") +
  theme_minimal()
###Interpret：FEV values are effect by second-hand smoke and it is lower than other three categories.Exposed to only gas stoves tend to have more evenly distributed FEV values rather than other three categories,it is normal distribution.
```

#Barchart of BMI by smoke/gas exposure
```{r}
ggplot(combined_data, aes(x = smoke_gas_exposure, fill = obesity_level)) +
  geom_bar(position ="dodge") +  # Use the actual BMI values for the height of the bars
  labs(title = "BMI by Smoke/Gas Exposure", x = "Smoke/Gas Exposure", y = "Count") +
  theme_minimal()
###Interpret: normal BMI are the most prevalent across all smoke/gas exposure categories, particularly in the Only Gas Stove and Neither groups. While there is representation of both overweight and obese individuals in each category, their numbers are smaller compared to those in the normal BMI group.
```
#Statistical summary graphs of FEV by BMI
```{r}
# Boxplot of FEV by BMI category
ggplot(combined_data, aes(x = bmi_category, y = fev, fill = bmi_category)) +
  geom_boxplot() +
  labs(title = "fev by bmi Category", x = "bmi Category", y = "fev") +
  theme_minimal()
###Interpret:The boxplot suggests that individuals in the obese and overweight categories tend to have higher median FEV values compared to those in the normal and underweight groups. The boxplots for FEV by BMI and smoke/gas exposure visually summarize the variability across different groups, with clear indicators of the central tendency (median) and spread (interquartile range)
```
#Statistical summary graphs of FEV by Smoke/Gas Exposure
```{r}
# Boxplot of FEV by smoke/gas exposure
ggplot(combined_data, aes(x = smoke_gas_exposure, y = fev, fill = smoke_gas_exposure)) +
  geom_boxplot() +
  labs(title = "FEV by Smoke/Gas Exposure", x = "Smoke/Gas Exposure", y = "FEV (ml)", fill = "Smoke/Gas Exposure") +
  theme_minimal()
### Interpret: All categories have similar median FEV values,but only second-hand smoke tend to have slightly lower on average.Outliers are present in each group, indicating variability in FEV among individuals in each exposure category.
```
#A leaflet map showing the concentrations of PM2.5 mass in each of the CHS communities
```{r}
library(leaflet)
pal <- colorNumeric(palette = c("green", "pink", "blue"), domain = combined_data$pm25_mass)
leaflet(combined_data) %>%
  addTiles() %>%
  addCircleMarkers(
    ~lon, ~lat,
    radius = ~pm25_mass/3,  
    color = ~pal(pm25_mass), 
    stroke = FALSE, fillOpacity = 0.5,
    label = ~paste("Town:", townname, "<br>PM2.5:", pm25_mass)
  ) %>%
  addLegend(
    position = "bottomright",
    title = "PM2.5 Concentration",
    pal = pal,  # Use the color palette
    values = ~pm25_mass
  )
###Interpret:The colored circles represent different levels of PM2.5 concentrations, with the size and color indicating the intensity of the pollution, Green represents lower levels of PM2.5 concentration, Pink represents moderate levels of PM2.5 concentration, Blue represents higher levels of PM2.5 concentration.Larger and darker circles (like blue) indicate the town of Mira Lowa higher concentrations of PM2.5 value reaches 29.97.
```
## Scatterplot of PM2.5 mass vs FEV
```{r}
ggplot(combined_data, aes(x = pm25_mass, y = fev)) +
  geom_point(alpha = 0.6) +
  geom_smooth(method = "lm", se = FALSE, color = "pink") +
  labs(title = "PM2.5 Mass vs FEV", x = "PM2.5 Concentration", y = "FEV") +
  theme_minimal()
###Interpret: there is a negative association between PM2.5 mass and FEV because the pink line shows the negative trends slope.
```

